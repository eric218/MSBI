DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_backup_log_sucessful_procedure`()
BEGIN
SET SQL_SAFE_UPDATES = 0;
/*???log_txt?????????*/
SET @LOG_FLAG = (SELECT count(1) from logtxt where log_type=1);
IF @LOG_FLAG>0 
THEN
insert IGNORE into backup_log (SERVER_NAME,DOMAIN_NAME,NODE_NAME,SCHEDULE_NAME,MESSAGE,DONE_DATE,DONE_DATE_TIME,IS_SUCCESS,LOG_DATE,LOG_DATE_TIME,START_DATE,START_DATE_TIME,INSERT_DATE_TIME,UPDATE_DATE_TIME) 
select
	split_function(log,',',1) AS SERVER_NAME,
	split_function((split_function(log,',',6)),' ',6) AS DOMAIN_NAME,
	split_function((split_function(log,',',6)),' ',13) AS NODE_NAME,
	split_function((split_function(log,',',6)),' ',3) AS SCHEDULE_NAME,
	split_function(log,',',6) AS MESSAGE,
	date_format_function('/',split_function((split_function(log,',',6)),' ',17)) AS DONE_DATE,
	datetime_format_function('/',(replace(CONCAT(split_function((split_function(log,',',6)),' ',17),' ',split_function((split_function(log,',',6)),' ',18)),'.',''))) AS DONE_DATE_TIME,
	1 AS IS_SUCCESS,
	split_function((split_function(log,',',2)),' ',1) AS LOG_DATE,
	datetime_format_function('-',split_function(log,',',2)) AS LOG_DATE_TIME,
	date_format_function('/',split_function((split_function(log,',',6)),' ',9)) AS START_DATE_TIME,
	datetime_format_function('/',(replace(CONCAT(split_function((split_function(log,',',6)),' ',9),' ',split_function((split_function(log,',',6)),' ',10)),'.',''))) AS START_DATE_TIME,
	current_timestamp AS INSERT_DATE_TIME,
	current_timestamp AS UPDATE_DATE_TIME
from logtxt
where log like '%completed successfully at%' and log like '%(SESSION:%' and log_type=1;
delete from logtxt where log_type=1;
END IF;
END$$
DELIMITER ;
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_month_report_procedure`()
BEGIN

END$$
DELIMITER ;
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_schedule_procedure`()
BEGIN
/*?????????schedule??*/
SET SQL_SAFE_UPDATES = 0;
/*???log_txt?????????*/
SET @LOG_FLAG = (SELECT count(1) from logtxt where log_type=2);
IF @LOG_FLAG>0 
THEN

delete from logtxt_temp;
insert into logtxt_temp(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10,col11,col12,col13,col14,col15,col16,col17,col18,col19,col20,col21,col22,col23,col24,col25,col26)
select
split_function(log,',',1),
split_function(log,',',2),
split_function(log,',',3),
split_function(log,',',4),
split_function(log,',',5),
split_function(log,',',6),
split_function(log,',',7),
split_function(log,',',8),
split_function(log,',',9),
split_function(log,',',10),
split_function(log,',',11),
split_function(log,',',12),
split_function(log,',',13),
split_function(log,',',14),
split_function(log,',',15),
split_function(log,',',16),
split_function(log,',',17),
split_function(log,',',18),
split_function(log,',',19),
split_function(log,',',20),
split_function(log,',',21),
split_function(log,',',22),
split_function(log,',',23),
split_function(log,',',24),
split_function(log,',',25),
log
from logtxt
WHERE log NOT REGEXP 'command ''SELECT''|against server|command SELECT' and log_type=2;
delete from schedule_temp;
insert  into schedule_temp(DOMAIN_NAME,SCHEDULE_NAME,DESCRIPTION,ACTIONS,SUBACTION,PRIORITY,START_DATE,START_DATE_TIME,DURATION,
						DURUNITS,MAXRUNTIME,PERIOD,PERUNITS,DATE_OF_WEEK,EACH_MONTH,DATE_OF_MONTH,WEEK_OF_MONTH,SCHED_STYLE,OPTIONES,OBJECT,INSERT_TIME,MESSAGE,ENABLED,INSERT_DATE)

select 
col1 as DOMAIN_NAME,col2 as SCHEDULE_NAME,col3 as DESCRIPTION,col4 as ACTIONS,col5 as SUBACTION,
col8 as PRIORITY,date_format_function('-',col9) as START_DATE, datetime_format_function('-1',CONCAT(col9,' ',col10)) as START_DATE_TIME,
col11 as DURATION,col12 as DURUNITS,col13 as MAXRUNTIME,if(col14='',0,col14) as PERIOD,col15 as PERUNITS,col16 as DATE_OF_WEEK,col22 as EACH_MONTH,col23 as DATE_OF_MONTH,col24 as WEEK_OF_MONTH,
col21 as SCHED_STYLE,col6 as OPTIONES,col7 as OBJECT, current_timestamp as INSERT_TIME,col26,1,CURDATE()
from logtxt_temp;


/*???schedule????schedule_temp???????????history?*/
insert into schedule_history(
select a.* from schedule a left join schedule_temp b on a.DOMAIN_NAME=b.DOMAIN_NAME and a.SCHEDULE_NAME=B.SCHEDULE_NAME
WHERE (a.DATE_OF_WEEK<>b.DATE_OF_WEEK or a.DATE_OF_MONTH<>b.DATE_OF_MONTH or  a.WEEK_OF_MONTH<>b.WEEK_OF_MONTH));

/*??schedule?*/
delete from schedule;
/*?????*/
insert into schedule(select * from schedule_temp);
delete from schedule_temp;
delete from logtxt where log_type=2;

END IF;
END$$
DELIMITER ;
